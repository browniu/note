(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{212:function(a,t,r){"use strict";r.r(t);var e=r(0),v=Object(e.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"项目经历"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#项目经历","aria-hidden":"true"}},[a._v("#")]),a._v(" 项目经历")]),a._v(" "),r("h2",{attrs:{id:"小游戏-决战大明宫-策略类实时对战-独立开发"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#小游戏-决战大明宫-策略类实时对战-独立开发","aria-hidden":"true"}},[a._v("#")]),a._v(" 小游戏-决战大明宫(策略类实时对战)-独立开发")]),a._v(" "),r("h3",{attrs:{id:"项目描述"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#项目描述","aria-hidden":"true"}},[a._v("#")]),a._v(" 项目描述")]),a._v(" "),r("p",[a._v("策略类实时对战小游戏。前期使用css3结合Canvas进行混合技术开发。后期内容增加后，选择使用游戏引擎cocos2D进行重构。在原生开发经验的加持下，使用游戏引擎的体验非常顺畅。")]),a._v(" "),r("h3",{attrs:{id:"项目职责"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#项目职责","aria-hidden":"true"}},[a._v("#")]),a._v(" 项目职责")]),a._v(" "),r("ul",[r("li",[a._v("验证和总结出css+canvas混合开发游戏的方案")]),a._v(" "),r("li",[a._v("原生JS实现碰撞检测、手势拖拽、粒子动画、帧动画控制等游戏相关算法")]),a._v(" "),r("li",[a._v("调研游戏引擎环境，掌握Cocos2d的开发流程和优化")]),a._v(" "),r("li",[a._v("掌握通过WebSocket与服务器建立实时通信连接的技术方案")])]),a._v(" "),r("h3",{attrs:{id:"技术亮点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#技术亮点","aria-hidden":"true"}},[a._v("#")]),a._v(" 技术亮点")]),a._v(" "),r("ul",[r("li",[a._v("触摸交互逻辑：返回触摸点的位置上对应的Dom节点。"),r("code",[a._v("offsetParent")]),a._v(" & "),r("code",[a._v("getBoundingClientRect")]),a._v(" & "),r("code",[a._v("ElementFromPoint")]),a._v(" 整合兼容方案")]),a._v(" "),r("li",[a._v("静态资源预加载逻辑。"),r("code",[a._v("Promise")]),a._v(" & "),r("code",[a._v("new Image()")])]),a._v(" "),r("li",[a._v("对象池。每次优先调用对象池中的元素，没有闲置对象时再创建新的元素。使用完毕的元素立即存入对象池。实现对象池的容量在满足交互峰值的前提下最小。")]),a._v(" "),r("li",[a._v("音频处理。音效的重叠播放和音频元素的内存泄露问题。")])]),a._v(" "),r("h3",{attrs:{id:"仓库地址"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#仓库地址","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("a",{attrs:{href:""}},[a._v("仓库地址")])]),a._v(" "),r("hr"),a._v(" "),r("h2",{attrs:{id:"前端架构-react-router编解码-技术排查"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#前端架构-react-router编解码-技术排查","aria-hidden":"true"}},[a._v("#")]),a._v(" 前端架构-React-router编解码-技术排查")]),a._v(" "),r("h3",{attrs:{id:"项目描述-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#项目描述-2","aria-hidden":"true"}},[a._v("#")]),a._v(" 项目描述")]),a._v(" "),r("p",[a._v("因为在使用"),r("code",[a._v("react-router-dom")]),a._v("的过程中发现在路由传参包含特殊符号"),r("code",[a._v("/")]),a._v("时，无法正确接收。因为react-router会自动对参数部分采取"),r("code",[a._v("decodeURI")]),a._v("（这个API无法对/转译），这个时候"),r("code",[a._v("/")]),a._v("后面的会被解析成路径而造成数据不完整。")]),a._v(" "),r("p",[a._v("这时可能会想在发送参数前对其进行"),r("code",[a._v("encodeURIcomponent")]),a._v("手动编码（这个API可以对包括/在内的更多特殊字符进行转译），然后在接收时使用"),r("code",[a._v("decodeURIcomponent")]),a._v("进行手动解码，然而react-router进行的"),r("code",[a._v("decodeURI")]),a._v("解码是自动的（无法阻止），所以就会对参数进行多次解码，如果参数中包含类转译字段（%2F），在接收参数时就会把"),r("code",[a._v("%2F")]),a._v("经过两次解码解码成"),r("code",[a._v("/")]),a._v("符号。")]),a._v(" "),r("h3",{attrs:{id:"项目职责-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#项目职责-2","aria-hidden":"true"}},[a._v("#")]),a._v(" 项目职责")]),a._v(" "),r("ul",[r("li",[a._v("重构react-router的URI编码解码逻辑，解决参数中携带特殊符号的问题")])]),a._v(" "),r("h3",{attrs:{id:"技术亮点-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#技术亮点-2","aria-hidden":"true"}},[a._v("#")]),a._v(" 技术亮点")]),a._v(" "),r("ul",[r("li",[a._v("基于原生"),r("code",[a._v("encodeURI")]),a._v("之上增加了对于"),r("code",[a._v("/[\\/?#]/g")]),a._v("等对URI分割有影响的字符进行手动转译成16进制编码。")]),a._v(" "),r("li",[a._v("修改基础库"),r("code",[a._v("history")]),a._v("的编码逻辑为"),r("code",[a._v("decodeURIComponent")]),a._v("逻辑")]),a._v(" "),r("li",[a._v("'在最理想的情况下，我们应该通过增加代码就能增加系统的功能，而不是修改现有的代码'。开发辅助处理插件，重写区别于"),r("code",[a._v("encodeURIComponent")]),a._v("的特殊符号编解码的逻辑")])]),a._v(" "),r("hr"),a._v(" "),r("h2",{attrs:{id:"新技术-数字印章-方案打包"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#新技术-数字印章-方案打包","aria-hidden":"true"}},[a._v("#")]),a._v(" 新技术-数字印章-方案打包")]),a._v(" "),r("h3",{attrs:{id:"项目描述-3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#项目描述-3","aria-hidden":"true"}},[a._v("#")]),a._v(" 项目描述")]),a._v(" "),r("p",[a._v("场景是在线下展会活动上，有一个项目是玩家到指定摊位上收集图章，集齐若干换取礼品。传统做法是在提供的DM单上，摊位工作人员通过手写签名或印章进行任务确认。")]),a._v(" "),r("p",[a._v("在移动互联网如此发达的今天，这个流程看起来笨拙又原始。为了给展会增色，提高趣味性，决定使用H5技术进行完成智能签到。最终解决方案的技术核心是多点触控。通过采集多个点位和解密算法，给用户带来更丰富的交互体验。")]),a._v(" "),r("h3",{attrs:{id:"项目职责-3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#项目职责-3","aria-hidden":"true"}},[a._v("#")]),a._v(" 项目职责")]),a._v(" "),r("ul",[r("li",[a._v("编写基于H5多点触控事件形成的点位进行图形解析为密码的核心算法")]),a._v(" "),r("li",[a._v("制作电子图章原型机")])]),a._v(" "),r("h3",{attrs:{id:"技术亮点-3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#技术亮点-3","aria-hidden":"true"}},[a._v("#")]),a._v(" 技术亮点")]),a._v(" "),r("ul",[r("li",[a._v("通过欧几里得距离得出两点间的距离")]),a._v(" "),r("li",[a._v("选择排序获取中位值")])]),a._v(" "),r("h3",{attrs:{id:"仓库地址-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#仓库地址-2","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("a",{attrs:{href:""}},[a._v("仓库地址")])]),a._v(" "),r("hr"),a._v(" "),r("h2",{attrs:{id:"新技术-姿势识别（深度学习）-方案打包"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#新技术-姿势识别（深度学习）-方案打包","aria-hidden":"true"}},[a._v("#")]),a._v(" 新技术-姿势识别（深度学习）-方案打包")]),a._v(" "),r("h3",{attrs:{id:"项目描述-4"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#项目描述-4","aria-hidden":"true"}},[a._v("#")]),a._v(" 项目描述")]),a._v(" "),r("p",[a._v("在电脑摄像头前做出和指定动作一样的姿势就可以完成任务，换取礼品。需求很简单，而以往的算法很难实现。这时候就想到可以引入深度学习技术。")]),a._v(" "),r("p",[a._v("通过tensorflow模型迁移应用技术，使用训练好的人体动作识别模型，结合分类器的二次训练，和向量重合度算法。实现了正确率的非常高的动作识别/匹配能力。")]),a._v(" "),r("h3",{attrs:{id:"项目职责-4"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#项目职责-4","aria-hidden":"true"}},[a._v("#")]),a._v(" 项目职责")]),a._v(" "),r("ul",[r("li",[a._v("通过对新技术的掌握反推需求")]),a._v(" "),r("li",[a._v("深度学习技术在前端团队的降纬推广")])]),a._v(" "),r("h3",{attrs:{id:"技术亮点-4"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#技术亮点-4","aria-hidden":"true"}},[a._v("#")]),a._v(" 技术亮点")]),a._v(" "),r("ul",[r("li",[a._v("向量重合度算法的JS实现")]),a._v(" "),r("li",[a._v("神经网络模型的创建和数据训练")]),a._v(" "),r("li",[a._v("模型的迁移应用技术和二次训练技术")])]),a._v(" "),r("h3",{attrs:{id:"仓库地址-3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#仓库地址-3","aria-hidden":"true"}},[a._v("#")]),a._v(" "),r("a",{attrs:{href:"https://github.com/browniu/shakeYhead",target:"_blank",rel:"noopener noreferrer"}},[a._v("仓库地址"),r("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=v.exports}}]);